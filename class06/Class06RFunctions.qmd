---
title: "Class 06 R Functions"
author: "Eduardo Modolo"
format: gfm
---

## R Functions

In this class we will work through the process of developing our own function for calculating average grades for fictional students in a fictional class

We will start with a simplified version of this problem. Grad some vectors of student scores. We want to drop the lowest score and get the average. 

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

We can use the `mean()` function to get the average:

```{r}
mean(student1)
```
We can find the smallest value with the `min()` function
```{r}
min(student1)
```
Use fn f1 to get help with `min()` function and see that there is a `which.min()` function that returns the location of extreme values

```{r}
student1
```
```{r}
which.min(student1)
```
The lowest value is in the 8th element of the vector

```{r}
student1[which.min(student1)]
```
```{r}
x<- 1:5
x
x[4]
x[-4]
```
```{r}
mean(student1[-which.min(student1)])
```

Now what about student2

```{r}
mean(student2[-which.min(student2)])
```
Nope :(
```{r}
which.min(student2)
```
```{r}
student2[-8]
```
```{r}
mean(student2)
```
```{r}
mean( c(5,5,5,NA))
```
after checking fn F1 mean() we found:
na.rm	
a logical value indicating whether NA values in x should be stripped before the computation proceeds
```{r}
mean( c(5,5,5,NA), na.rm = TRUE)
```

```{r}
mean(student2[-which.min(student2)], na.rm = TRUE)
```

Hmmmm... okay what about student 3

```{r}
student3
```

```{r}
mean(student3[-which.min(student3)], na.rm = TRUE)
```

```{r}
mean(student3, na.rm = TRUE)
```
This student did NOT do that good in the class.
We gotta find a better way that doesn't inflate the grade.

After a quick Google search, it said to use a function called `is.na()`, how does it work?

```{r}
is.na(student3)
```

```{r}
student2
is.na(student2)
```
I can use the logical vector to index another vector, "access the *TRUE* values of another vector"

Use it to make the NA = 0
```{r}
student2[is.na(student2)] <- 0
student2
```
```{r}
x <- student3
x[is.na(x)] <-0
x
```
Combine new method of changing NA with mean

```{r}
x <- student1
x[is.na(x)] <-0
mean(x[-which.min(x)])
```
It WORKS! 

We have our working snippet of code! we can now use this in the body of our function

All functions in R have at least 3 things:

-A name (we pick)
-input arguments
-a body (the code that does the work)

```{r}
grade <- function(x) {
  #mask NA to zero
  x[is.na(x)] <- 0
  #Drop lowest value and get mean
  mean(x[-which.min(x)])
}
```

Try out the function!

```{r}
grade(student1)
grade(student2)
grade(student3)
```

Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” 

```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names = 1)
head(gradebook)
```

How to use `apply()` function, which is super useful but a bit more complicated, to use the `grade()` function to the whole class gradebook.

apply( gradebook "input for the function", margin = 1 "means applying the function over rows, 2 would be for the columns", grade "is the function we want to apply over the rows for each row")

```{r}
apply(gradebook, 1, grade)
```
```{r}
results <- apply(gradebook, 1, grade)
```

Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook?

```{r}
results[which.max(results)]
```
From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall?

```{r}
gradebook
```

```{r}
apply(gradebook, 2, sum, na.rm = TRUE)
```
```{r}
which.min(apply(gradebook, 2, sum, na.rm = TRUE))
```
Homework 2 was the toughest 

If you want to use the mean approach, You will need to mask the NA (missing homeworks) to 0

```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
```

Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)?

Here we are going to look at the correlation of each homework results (i.e. the columns in the gradebook) with the overall grade of students from the course `results` 

```{r}
mask$hw4
```
Im going to use the `cor()` function "google how to find correlation in R" 

```{r}
cor(results, mask$hw4 )
```
```{r}
cor(results, mask$hw5 )
```

apply( gradebook "input for the function", margin = 1 "means applying the function over rows, 2 would be for the columns", grade "is the function we want to apply over the rows for each row")

```{r}
apply(mask, 2, cor, y=results)
```
```{r}
which.max(apply(mask, 2, cor, y=results))
```
Homework 5 had the highest correlation!



